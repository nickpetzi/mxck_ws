<launch>
  <!--camera-->
  <arg name="launch_camera" value="false" />
  <arg name="run_image_view" value="false" /> <!-- view camera image-->
  <arg name="dyn_reconfigure" value="false" /> <!--Set Camera Controls Using Dynamic Reconfigure Params-->

  <!--manual control-->
  <arg name="manual_control" value="false"/> 
  <arg name="control_type" value="rc"/> <!--rc or joy-->

  <!--lidar-->
  <arg name="launch_lidar" value="false" />

  <!--serial-->
  <arg name="launch_serial" value="false" /> <!--us, lights, imu, rc-->
  <arg name="launch_pdc" value="false" /> <!--Park Distance Control (PDC)-->
  <arg name="launch_lights" value="false" /> <!--lights example node-->

  <!--rosbag-->
  <arg name="rosbag_record" value="false" /> <!--record topics-->
  <arg name="record_topics" value="/uss_values_stamped" />
  <arg name="record_path" value="$(find mxck_run)/bagfiles/uss" />

   <!--ports-->
  <arg name="joy_port" value="/dev/input/js0" />
  <arg name="vesc_port" value="/dev/vesc" />
  <arg name="stm_port" value="/dev/stm32_nucleo" />
  <arg name="stm_baud" value="921600" />
  

  <!--paramfiles-->
  <arg name="control_config" default="$(find vehicle_control)/config/control_config.yaml" />

  <rosparam file="$(arg control_config)" command="load" />

  <!--camera-->
  <!--Auto-exposure priority determines whether the camera can
      dynamically vary the frame rate depending on lighting conditions.-->
  <rosparam> <!--dynamic params-->
    /camera/rgb_camera/enable_auto_white_balance: true
    /camera/rgb_camera/enable_auto_exposure: false
    /camera/rgb_camera/auto_exposure_priority: false
  </rosparam>

  <group if="$(arg launch_camera)">
    <include file="$(find realsense2_camera)/launch/rs_camera.launch" >
      <arg name="color_width" value="640"/> <!--static params-->
      <arg name="color_height" value="360"/>
      <arg name="color_fps" value="6"/>
      <arg name="enable_confidence" value="False"/>
      <arg name="enable_depth" value="False"/>
      <arg name="enable_accel" value="False"/>
      <arg name="enable_gyro" value="False"/>
      <arg name="unite_imu_method" value="copy"/>
    </include>

    <!--dynamic reconfigure-->
    <group if="$(arg dyn_reconfigure)">
      <node name="rqt_reconfigure" pkg="rqt_reconfigure" type="rqt_reconfigure" respawn="true"/>
    </group>

    <!--image-view-->
    <group if="$(arg run_image_view)">
      <node name="image_view" pkg="image_view" type="image_view" respawn="true">
        <remap from="image" to="/camera/color/image_raw" />
      </node>
    </group>

  </group>


  <!--lidar-->
  <group if="$(arg launch_lidar)">
    <include file="$(find rplidar_ros)/launch/rplidar.launch" />
  </group>
  
  <!--manual control-->
  <group if="$(arg manual_control)">
    <include file="$(find vehicle_control)/launch/manual_control.launch" >
      <arg name="vesc_port" value="$(arg vesc_port)" />
      <arg name="joy_port" value="$(arg joy_port)" />
      <arg name="control_type" value="$(arg control_type)" />
    </include>
  </group>

	<!--serial-->
  <group if="$(arg launch_serial)">
	  <include file="$(find stm32_nucleo)/launch/launch_nucleo.launch" />
  </group>

	<!--ultrasonic pdc-->
  <group if="$(arg launch_pdc)">
	  <include file="$(find pdc_visualization)/launch/pdc_visualization.launch" />
  </group>

	<!--lights example node-->
  <group if="$(arg launch_lights)">
	  <include file="$(find stm32_nucleo)/launch/lights_example.launch" />
  </group>

  <!--record-->
  <group if="$(arg rosbag_record)">
    <node pkg="rosbag" type="record" name="rosbag_record" 
        args="record -o $(arg record_path) $(arg record_topics) ">
    </node>
  </group>

</launch>


